plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	// id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"modid" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

configurations {
    includeResolvable {
        canBeResolved = true
        canBeConsumed = false
        extendsFrom(include)
    }
}

dependencies {
    // === Fabric basics ===
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // === OpenAI SDK ===
    modImplementation("com.openai:openai-java:3.4.1")
    include("com.openai:openai-java:3.4.1")

    // === OkHttp / Okio / Retrofit (needed by OpenAI) ===
    modImplementation("com.squareup.okhttp3:okhttp:4.11.0")
    include("com.squareup.okhttp3:okhttp:4.11.0")

    modImplementation("com.squareup.okio:okio:3.2.0")
    include("com.squareup.okio:okio:3.2.0")

    modImplementation("com.squareup.retrofit2:retrofit:2.9.0")
    include("com.squareup.retrofit2:retrofit:2.9.0")

    // === Jackson (for config + OpenAI internally) ===
    modImplementation("com.fasterxml.jackson.core:jackson-databind:2.15.2")
    include("com.fasterxml.jackson.core:jackson-databind:2.15.2")

    modImplementation("com.fasterxml.jackson.core:jackson-core:2.15.2")
    include("com.fasterxml.jackson.core:jackson-core:2.15.2")

    modImplementation("com.fasterxml.jackson.core:jackson-annotations:2.15.2")
    include("com.fasterxml.jackson.core:jackson-annotations:2.15.2")
}

tasks.withType(Jar).configureEach {
    from {
        configurations.includeResolvable.collect { it.isDirectory() ? it : zipTree(it) }
    }

	// Ignore duplicate META-INF entries
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


// shadowJar {
// 	zip64 true
// 	relocate "com.openai", "com.ftkevon.mineclanker.shadow.com.openai"
// 	relocate "com.fasterxml.jackson", "com.ftkevon.mineclanker.shadow.com.fasterxml.jackson"

// 	exclude 'net/fabricmc/**'
// 	// minimize()
// }

// remapJar {
// 	dependsOn shadowJar
// 	inputFile.set(shadowJar.archiveFile)
// }

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.version}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}